/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-10-30 15:57:41 UTC)
 * on 2013-11-06 at 14:25:26 UTC 
 * Modify at your own risk.
 */

package com.appspot.twitterlitesample.user;

/**
 * Service definition for User (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UserRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class User extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.17.0-rc of the user library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://mytwitterlite.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "user/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public User(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  User(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the UserController collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code User user = new User(...);}
   *   {@code User.UserController.List request = user.userController().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public UserController userController() {
    return new UserController();
  }

  /**
   * The "userController" collection of methods.
   */
  public class UserController {

    /**
     * Create a request for the method "userController.updateUserDTOMetadata".
     *
     * This request holds the parameters needed by the user server.  After setting any optional
     * parameters, call the {@link UpdateUserDTOMetadata#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.appspot.twitterlitesample.user.model.UserGetDTO}
     * @return the request
     */
    public UpdateUserDTOMetadata updateUserDTOMetadata(com.appspot.twitterlitesample.user.model.UserGetDTO content) throws java.io.IOException {
      UpdateUserDTOMetadata result = new UpdateUserDTOMetadata(content);
      initialize(result);
      return result;
    }

    public class UpdateUserDTOMetadata extends UserRequest<com.appspot.twitterlitesample.user.model.UserGetDTO> {

      private static final String REST_PATH = "usergetdto";

      /**
       * Create a request for the method "userController.updateUserDTOMetadata".
       *
       * This request holds the parameters needed by the the user server.  After setting any optional
       * parameters, call the {@link UpdateUserDTOMetadata#execute()} method to invoke the remote
       * operation. <p> {@link UpdateUserDTOMetadata#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.twitterlitesample.user.model.UserGetDTO}
       * @since 1.13
       */
      protected UpdateUserDTOMetadata(com.appspot.twitterlitesample.user.model.UserGetDTO content) {
        super(User.this, "PUT", REST_PATH, content, com.appspot.twitterlitesample.user.model.UserGetDTO.class);
      }

      @Override
      public UpdateUserDTOMetadata setAlt(java.lang.String alt) {
        return (UpdateUserDTOMetadata) super.setAlt(alt);
      }

      @Override
      public UpdateUserDTOMetadata setFields(java.lang.String fields) {
        return (UpdateUserDTOMetadata) super.setFields(fields);
      }

      @Override
      public UpdateUserDTOMetadata setKey(java.lang.String key) {
        return (UpdateUserDTOMetadata) super.setKey(key);
      }

      @Override
      public UpdateUserDTOMetadata setOauthToken(java.lang.String oauthToken) {
        return (UpdateUserDTOMetadata) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateUserDTOMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateUserDTOMetadata) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateUserDTOMetadata setQuotaUser(java.lang.String quotaUser) {
        return (UpdateUserDTOMetadata) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateUserDTOMetadata setUserIp(java.lang.String userIp) {
        return (UpdateUserDTOMetadata) super.setUserIp(userIp);
      }

      @Override
      public UpdateUserDTOMetadata set(String parameterName, Object value) {
        return (UpdateUserDTOMetadata) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "create".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Create#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.twitterlitesample.user.model.CreateUserdDTO}
   * @return the request
   */
  public Create create(com.appspot.twitterlitesample.user.model.CreateUserdDTO content) throws java.io.IOException {
    Create result = new Create(content);
    initialize(result);
    return result;
  }

  public class Create extends UserRequest<com.appspot.twitterlitesample.user.model.UserGetDTO> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "create".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
     * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.twitterlitesample.user.model.CreateUserdDTO}
     * @since 1.13
     */
    protected Create(com.appspot.twitterlitesample.user.model.CreateUserdDTO content) {
      super(User.this, "POST", REST_PATH, content, com.appspot.twitterlitesample.user.model.UserGetDTO.class);
    }

    @Override
    public Create setAlt(java.lang.String alt) {
      return (Create) super.setAlt(alt);
    }

    @Override
    public Create setFields(java.lang.String fields) {
      return (Create) super.setFields(fields);
    }

    @Override
    public Create setKey(java.lang.String key) {
      return (Create) super.setKey(key);
    }

    @Override
    public Create setOauthToken(java.lang.String oauthToken) {
      return (Create) super.setOauthToken(oauthToken);
    }

    @Override
    public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Create) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Create setQuotaUser(java.lang.String quotaUser) {
      return (Create) super.setQuotaUser(quotaUser);
    }

    @Override
    public Create setUserIp(java.lang.String userIp) {
      return (Create) super.setUserIp(userIp);
    }

    @Override
    public Create set(String parameterName, Object value) {
      return (Create) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "delete".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
   *
   * @param userKey
   * @return the request
   */
  public Delete delete(java.lang.String userKey) throws java.io.IOException {
    Delete result = new Delete(userKey);
    initialize(result);
    return result;
  }

  public class Delete extends UserRequest<Void> {

    private static final String REST_PATH = "user/{userKey}";

    /**
     * Create a request for the method "delete".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
     * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userKey
     * @since 1.13
     */
    protected Delete(java.lang.String userKey) {
      super(User.this, "DELETE", REST_PATH, null, Void.class);
      this.userKey = com.google.api.client.util.Preconditions.checkNotNull(userKey, "Required parameter userKey must be specified.");
    }

    @Override
    public Delete setAlt(java.lang.String alt) {
      return (Delete) super.setAlt(alt);
    }

    @Override
    public Delete setFields(java.lang.String fields) {
      return (Delete) super.setFields(fields);
    }

    @Override
    public Delete setKey(java.lang.String key) {
      return (Delete) super.setKey(key);
    }

    @Override
    public Delete setOauthToken(java.lang.String oauthToken) {
      return (Delete) super.setOauthToken(oauthToken);
    }

    @Override
    public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Delete) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Delete setQuotaUser(java.lang.String quotaUser) {
      return (Delete) super.setQuotaUser(quotaUser);
    }

    @Override
    public Delete setUserIp(java.lang.String userIp) {
      return (Delete) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userKey;

    /**

     */
    public java.lang.String getUserKey() {
      return userKey;
    }

    public Delete setUserKey(java.lang.String userKey) {
      this.userKey = userKey;
      return this;
    }

    @Override
    public Delete set(String parameterName, Object value) {
      return (Delete) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "follow".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Follow#execute()} method to invoke the remote operation.
   *
   * @param followedKey
   * @param followerKey
   * @return the request
   */
  public Follow follow(java.lang.String followedKey, java.lang.String followerKey) throws java.io.IOException {
    Follow result = new Follow(followedKey, followerKey);
    initialize(result);
    return result;
  }

  public class Follow extends UserRequest<Void> {

    private static final String REST_PATH = "follow";

    /**
     * Create a request for the method "follow".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Follow#execute()} method to invoke the remote operation. <p> {@link
     * Follow#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param followedKey
     * @param followerKey
     * @since 1.13
     */
    protected Follow(java.lang.String followedKey, java.lang.String followerKey) {
      super(User.this, "POST", REST_PATH, null, Void.class);
      this.followedKey = com.google.api.client.util.Preconditions.checkNotNull(followedKey, "Required parameter followedKey must be specified.");
      this.followerKey = com.google.api.client.util.Preconditions.checkNotNull(followerKey, "Required parameter followerKey must be specified.");
    }

    @Override
    public Follow setAlt(java.lang.String alt) {
      return (Follow) super.setAlt(alt);
    }

    @Override
    public Follow setFields(java.lang.String fields) {
      return (Follow) super.setFields(fields);
    }

    @Override
    public Follow setKey(java.lang.String key) {
      return (Follow) super.setKey(key);
    }

    @Override
    public Follow setOauthToken(java.lang.String oauthToken) {
      return (Follow) super.setOauthToken(oauthToken);
    }

    @Override
    public Follow setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Follow) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Follow setQuotaUser(java.lang.String quotaUser) {
      return (Follow) super.setQuotaUser(quotaUser);
    }

    @Override
    public Follow setUserIp(java.lang.String userIp) {
      return (Follow) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String followedKey;

    /**

     */
    public java.lang.String getFollowedKey() {
      return followedKey;
    }

    public Follow setFollowedKey(java.lang.String followedKey) {
      this.followedKey = followedKey;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String followerKey;

    /**

     */
    public java.lang.String getFollowerKey() {
      return followerKey;
    }

    public Follow setFollowerKey(java.lang.String followerKey) {
      this.followerKey = followerKey;
      return this;
    }

    @Override
    public Follow set(String parameterName, Object value) {
      return (Follow) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "followed".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Followed#execute()} method to invoke the remote operation.
   *
   * @param limit
   * @param userKey
   * @return the request
   */
  public Followed followed(java.lang.Integer limit, java.lang.String userKey) throws java.io.IOException {
    Followed result = new Followed(limit, userKey);
    initialize(result);
    return result;
  }

  public class Followed extends UserRequest<com.appspot.twitterlitesample.user.model.UsersCollection> {

    private static final String REST_PATH = "followed";

    /**
     * Create a request for the method "followed".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Followed#execute()} method to invoke the remote operation. <p>
     * {@link
     * Followed#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param limit
     * @param userKey
     * @since 1.13
     */
    protected Followed(java.lang.Integer limit, java.lang.String userKey) {
      super(User.this, "GET", REST_PATH, null, com.appspot.twitterlitesample.user.model.UsersCollection.class);
      this.limit = com.google.api.client.util.Preconditions.checkNotNull(limit, "Required parameter limit must be specified.");
      this.userKey = com.google.api.client.util.Preconditions.checkNotNull(userKey, "Required parameter userKey must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Followed setAlt(java.lang.String alt) {
      return (Followed) super.setAlt(alt);
    }

    @Override
    public Followed setFields(java.lang.String fields) {
      return (Followed) super.setFields(fields);
    }

    @Override
    public Followed setKey(java.lang.String key) {
      return (Followed) super.setKey(key);
    }

    @Override
    public Followed setOauthToken(java.lang.String oauthToken) {
      return (Followed) super.setOauthToken(oauthToken);
    }

    @Override
    public Followed setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Followed) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Followed setQuotaUser(java.lang.String quotaUser) {
      return (Followed) super.setQuotaUser(quotaUser);
    }

    @Override
    public Followed setUserIp(java.lang.String userIp) {
      return (Followed) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public Followed setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userKey;

    /**

     */
    public java.lang.String getUserKey() {
      return userKey;
    }

    public Followed setUserKey(java.lang.String userKey) {
      this.userKey = userKey;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public Followed setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public Followed set(String parameterName, Object value) {
      return (Followed) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "followers".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Followers#execute()} method to invoke the remote operation.
   *
   * @param limit
   * @param userKey
   * @return the request
   */
  public Followers followers(java.lang.Integer limit, java.lang.String userKey) throws java.io.IOException {
    Followers result = new Followers(limit, userKey);
    initialize(result);
    return result;
  }

  public class Followers extends UserRequest<com.appspot.twitterlitesample.user.model.UsersCollection> {

    private static final String REST_PATH = "followers";

    /**
     * Create a request for the method "followers".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Followers#execute()} method to invoke the remote operation. <p>
     * {@link
     * Followers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param limit
     * @param userKey
     * @since 1.13
     */
    protected Followers(java.lang.Integer limit, java.lang.String userKey) {
      super(User.this, "GET", REST_PATH, null, com.appspot.twitterlitesample.user.model.UsersCollection.class);
      this.limit = com.google.api.client.util.Preconditions.checkNotNull(limit, "Required parameter limit must be specified.");
      this.userKey = com.google.api.client.util.Preconditions.checkNotNull(userKey, "Required parameter userKey must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Followers setAlt(java.lang.String alt) {
      return (Followers) super.setAlt(alt);
    }

    @Override
    public Followers setFields(java.lang.String fields) {
      return (Followers) super.setFields(fields);
    }

    @Override
    public Followers setKey(java.lang.String key) {
      return (Followers) super.setKey(key);
    }

    @Override
    public Followers setOauthToken(java.lang.String oauthToken) {
      return (Followers) super.setOauthToken(oauthToken);
    }

    @Override
    public Followers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Followers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Followers setQuotaUser(java.lang.String quotaUser) {
      return (Followers) super.setQuotaUser(quotaUser);
    }

    @Override
    public Followers setUserIp(java.lang.String userIp) {
      return (Followers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public Followers setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userKey;

    /**

     */
    public java.lang.String getUserKey() {
      return userKey;
    }

    public Followers setUserKey(java.lang.String userKey) {
      this.userKey = userKey;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public Followers setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public Followers set(String parameterName, Object value) {
      return (Followers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "list".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link List#execute()} method to invoke the remote operation.
   *
   * @param limit
   * @return the request
   */
  public List list(java.lang.Integer limit) throws java.io.IOException {
    List result = new List(limit);
    initialize(result);
    return result;
  }

  public class List extends UserRequest<com.appspot.twitterlitesample.user.model.UsersCollection> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "list".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
     * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param limit
     * @since 1.13
     */
    protected List(java.lang.Integer limit) {
      super(User.this, "GET", REST_PATH, null, com.appspot.twitterlitesample.user.model.UsersCollection.class);
      this.limit = com.google.api.client.util.Preconditions.checkNotNull(limit, "Required parameter limit must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public List setAlt(java.lang.String alt) {
      return (List) super.setAlt(alt);
    }

    @Override
    public List setFields(java.lang.String fields) {
      return (List) super.setFields(fields);
    }

    @Override
    public List setKey(java.lang.String key) {
      return (List) super.setKey(key);
    }

    @Override
    public List setOauthToken(java.lang.String oauthToken) {
      return (List) super.setOauthToken(oauthToken);
    }

    @Override
    public List setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (List) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public List setQuotaUser(java.lang.String quotaUser) {
      return (List) super.setQuotaUser(quotaUser);
    }

    @Override
    public List setUserIp(java.lang.String userIp) {
      return (List) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public List setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public List setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public List set(String parameterName, Object value) {
      return (List) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "patch".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
   *
   * @param userKey
   * @param content the {@link com.appspot.twitterlitesample.user.model.UserSetDTO}
   * @return the request
   */
  public Patch patch(java.lang.String userKey, com.appspot.twitterlitesample.user.model.UserSetDTO content) throws java.io.IOException {
    Patch result = new Patch(userKey, content);
    initialize(result);
    return result;
  }

  public class Patch extends UserRequest<Void> {

    private static final String REST_PATH = "user/{userKey}";

    /**
     * Create a request for the method "patch".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
     * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userKey
     * @param content the {@link com.appspot.twitterlitesample.user.model.UserSetDTO}
     * @since 1.13
     */
    protected Patch(java.lang.String userKey, com.appspot.twitterlitesample.user.model.UserSetDTO content) {
      super(User.this, "PUT", REST_PATH, content, Void.class);
      this.userKey = com.google.api.client.util.Preconditions.checkNotNull(userKey, "Required parameter userKey must be specified.");
    }

    @Override
    public Patch setAlt(java.lang.String alt) {
      return (Patch) super.setAlt(alt);
    }

    @Override
    public Patch setFields(java.lang.String fields) {
      return (Patch) super.setFields(fields);
    }

    @Override
    public Patch setKey(java.lang.String key) {
      return (Patch) super.setKey(key);
    }

    @Override
    public Patch setOauthToken(java.lang.String oauthToken) {
      return (Patch) super.setOauthToken(oauthToken);
    }

    @Override
    public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Patch) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Patch setQuotaUser(java.lang.String quotaUser) {
      return (Patch) super.setQuotaUser(quotaUser);
    }

    @Override
    public Patch setUserIp(java.lang.String userIp) {
      return (Patch) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userKey;

    /**

     */
    public java.lang.String getUserKey() {
      return userKey;
    }

    public Patch setUserKey(java.lang.String userKey) {
      this.userKey = userKey;
      return this;
    }

    @Override
    public Patch set(String parameterName, Object value) {
      return (Patch) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "read".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Read#execute()} method to invoke the remote operation.
   *
   * @param userKey
   * @return the request
   */
  public Read read(java.lang.String userKey) throws java.io.IOException {
    Read result = new Read(userKey);
    initialize(result);
    return result;
  }

  public class Read extends UserRequest<com.appspot.twitterlitesample.user.model.UserGetDTO> {

    private static final String REST_PATH = "user/{userKey}";

    /**
     * Create a request for the method "read".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Read#execute()} method to invoke the remote operation. <p> {@link
     * Read#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userKey
     * @since 1.13
     */
    protected Read(java.lang.String userKey) {
      super(User.this, "GET", REST_PATH, null, com.appspot.twitterlitesample.user.model.UserGetDTO.class);
      this.userKey = com.google.api.client.util.Preconditions.checkNotNull(userKey, "Required parameter userKey must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Read setAlt(java.lang.String alt) {
      return (Read) super.setAlt(alt);
    }

    @Override
    public Read setFields(java.lang.String fields) {
      return (Read) super.setFields(fields);
    }

    @Override
    public Read setKey(java.lang.String key) {
      return (Read) super.setKey(key);
    }

    @Override
    public Read setOauthToken(java.lang.String oauthToken) {
      return (Read) super.setOauthToken(oauthToken);
    }

    @Override
    public Read setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Read) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Read setQuotaUser(java.lang.String quotaUser) {
      return (Read) super.setQuotaUser(quotaUser);
    }

    @Override
    public Read setUserIp(java.lang.String userIp) {
      return (Read) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userKey;

    /**

     */
    public java.lang.String getUserKey() {
      return userKey;
    }

    public Read setUserKey(java.lang.String userKey) {
      this.userKey = userKey;
      return this;
    }

    @Override
    public Read set(String parameterName, Object value) {
      return (Read) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "unfollow".
   *
   * This request holds the parameters needed by the user server.  After setting any optional
   * parameters, call the {@link Unfollow#execute()} method to invoke the remote operation.
   *
   * @param unFollowedKey
   * @param unFollowerKey
   * @return the request
   */
  public Unfollow unfollow(java.lang.String unFollowedKey, java.lang.String unFollowerKey) throws java.io.IOException {
    Unfollow result = new Unfollow(unFollowedKey, unFollowerKey);
    initialize(result);
    return result;
  }

  public class Unfollow extends UserRequest<Void> {

    private static final String REST_PATH = "unfollow";

    /**
     * Create a request for the method "unfollow".
     *
     * This request holds the parameters needed by the the user server.  After setting any optional
     * parameters, call the {@link Unfollow#execute()} method to invoke the remote operation. <p>
     * {@link
     * Unfollow#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param unFollowedKey
     * @param unFollowerKey
     * @since 1.13
     */
    protected Unfollow(java.lang.String unFollowedKey, java.lang.String unFollowerKey) {
      super(User.this, "GET", REST_PATH, null, Void.class);
      this.unFollowedKey = com.google.api.client.util.Preconditions.checkNotNull(unFollowedKey, "Required parameter unFollowedKey must be specified.");
      this.unFollowerKey = com.google.api.client.util.Preconditions.checkNotNull(unFollowerKey, "Required parameter unFollowerKey must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Unfollow setAlt(java.lang.String alt) {
      return (Unfollow) super.setAlt(alt);
    }

    @Override
    public Unfollow setFields(java.lang.String fields) {
      return (Unfollow) super.setFields(fields);
    }

    @Override
    public Unfollow setKey(java.lang.String key) {
      return (Unfollow) super.setKey(key);
    }

    @Override
    public Unfollow setOauthToken(java.lang.String oauthToken) {
      return (Unfollow) super.setOauthToken(oauthToken);
    }

    @Override
    public Unfollow setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Unfollow) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Unfollow setQuotaUser(java.lang.String quotaUser) {
      return (Unfollow) super.setQuotaUser(quotaUser);
    }

    @Override
    public Unfollow setUserIp(java.lang.String userIp) {
      return (Unfollow) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String unFollowedKey;

    /**

     */
    public java.lang.String getUnFollowedKey() {
      return unFollowedKey;
    }

    public Unfollow setUnFollowedKey(java.lang.String unFollowedKey) {
      this.unFollowedKey = unFollowedKey;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String unFollowerKey;

    /**

     */
    public java.lang.String getUnFollowerKey() {
      return unFollowerKey;
    }

    public Unfollow setUnFollowerKey(java.lang.String unFollowerKey) {
      this.unFollowerKey = unFollowerKey;
      return this;
    }

    @Override
    public Unfollow set(String parameterName, Object value) {
      return (Unfollow) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link User}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link User}. */
    @Override
    public User build() {
      return new User(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UserRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUserRequestInitializer(
        UserRequestInitializer userRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(userRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
